{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\game\\\\src\\\\Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Animatronic from \"./components/Animatronic\";\nimport Office from \"./components/Office\";\nimport Camera from \"./components/Camera\";\nimport Hud from \"./components/Hud\";\nimport Media from \"./components/Media\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet isBlackout = false;\nlet {\n  Ambience\n} = Media.Sounds;\nAmbience.loop = true;\nlet officeProps = {\n  leftDoor: false,\n  rightDoor: false\n};\n\nconst Game = _ref => {\n  _s();\n\n  let {\n    office,\n    isCameraOpen,\n    energy,\n    gameOver,\n    stages,\n    endGame,\n    dispatch\n  } = _ref;\n  const [goldenFreddy, setGoldenFreddy] = useState(false);\n  useEffect(() => {\n    Ambience.currentTime = 0;\n    Ambience.play();\n    isBlackout = false;\n    officeProps = {\n      leftDoor: false,\n      rightDoor: false\n    };\n  }, []);\n  useEffect(() => {\n    if (gameOver) Ambience.pause();\n  }, [gameOver]);\n  useEffect(() => {\n    if (energy <= 0) {\n      isBlackout = true;\n      Ambience.pause();\n    }\n  }, [energy]);\n  useEffect(() => {\n    let newTime = 6300;\n    if (office.leftDoor) newTime -= 1100;\n    if (office.rightDoor) newTime -= 1100;\n    if (office.leftLight) newTime -= 500;\n    if (office.rightLight) newTime -= 500;\n    if (isCameraOpen) newTime -= 1100;\n    dispatch({\n      type: \"CHANGE_TIME\",\n      content: newTime\n    });\n    officeProps = {\n      leftDoor: office.leftDoor,\n      rightDoor: office.rightDoor\n    };\n  }, [office.leftDoor, office.rightDoor, office.leftLight, office.rightLight, isCameraOpen]);\n\n  const handleJumpscare = character => {\n    if (isBlackout || gameOver) return;\n    dispatch({\n      type: \"CHANGE_ANIMATRONIC\",\n      animatronic: character,\n      animatronicState: {\n        door: null,\n        camera: null,\n        jumpscare: true\n      }\n    });\n    dispatch({\n      type: \"CHANGE_JUMPSCARE\",\n      animatronic: character\n    });\n    if (character === \"Foxy\" || character === \"Freddy\") dispatch({\n      type: \"FORCE_CAMERA_CLOSE\"\n    });\n    setTimeout(() => {\n      if (!isCameraOpen) dispatch({\n        type: \"FORCE_CAMERA_CLOSE\"\n      });\n    }, 10000);\n  };\n\n  async function isThisDoorOpen(door) {\n    const isDoorOpen = await officeProps[door];\n    return isDoorOpen;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Animatronic, {\n      stages: stages,\n      handleJumpscare: handleJumpscare,\n      gameOver: gameOver,\n      isThisDoorOpen: isThisDoorOpen,\n      blackout: energy <= 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), !gameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [energy <= 0 ? null : /*#__PURE__*/_jsxDEV(Hud, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Camera, {\n        handleJumpscare: handleJumpscare,\n        goldenFreddy: goldenFreddy,\n        setGoldenFreddy: setGoldenFreddy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), isCameraOpen ? null : /*#__PURE__*/_jsxDEV(Office, {\n        endGame: endGame,\n        blackout: energy <= 0,\n        goldenFreddyEnabled: goldenFreddy\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true) : null]\n  }, void 0, true);\n};\n\n_s(Game, \"PxuZRBZDE8dpRv0SenibF0gZiAg=\");\n\n_c = Game;\n\nconst mapStateToProps = state => {\n  return {\n    animatronics: state.animatronicsReducer,\n    time: state.configReducer.time,\n    hour: state.configReducer.hour,\n    energy: state.configReducer.energy,\n    office: state.officeReducer,\n    camera: state.cameraReducer.camera,\n    isCameraOpen: state.cameraReducer.isCameraOpen\n  };\n};\n\nexport default connect(mapStateToProps)(Game);\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","useEffect","useState","connect","Animatronic","Office","Camera","Hud","Media","isBlackout","Ambience","Sounds","loop","officeProps","leftDoor","rightDoor","Game","office","isCameraOpen","energy","gameOver","stages","endGame","dispatch","goldenFreddy","setGoldenFreddy","currentTime","play","pause","newTime","leftLight","rightLight","type","content","handleJumpscare","character","animatronic","animatronicState","door","camera","jumpscare","setTimeout","isThisDoorOpen","isDoorOpen","mapStateToProps","state","animatronics","animatronicsReducer","time","configReducer","hour","officeReducer","cameraReducer"],"sources":["C:/Users/PC/Desktop/game/src/Game.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Animatronic from \"./components/Animatronic\";\nimport Office from \"./components/Office\";\nimport Camera from \"./components/Camera\";\nimport Hud from \"./components/Hud\";\nimport Media from \"./components/Media\";\n\nlet isBlackout = false;\n\nlet { Ambience } = Media.Sounds;\nAmbience.loop = true;\n\nlet officeProps = { leftDoor: false, rightDoor: false };\n\nconst Game = ({\n  office,\n  isCameraOpen,\n  energy,\n  gameOver,\n  stages,\n  endGame,\n  dispatch,\n}) => {\n  const [goldenFreddy, setGoldenFreddy] = useState(false);\n\n  useEffect(() => {\n    Ambience.currentTime = 0;\n    Ambience.play();\n    isBlackout = false;\n    officeProps = { leftDoor: false, rightDoor: false };\n  }, []);\n\n  useEffect(() => {\n    if (gameOver) Ambience.pause();\n  }, [gameOver]);\n\n  useEffect(() => {\n    if (energy <= 0) {\n      isBlackout = true;\n      Ambience.pause();\n    }\n  }, [energy]);\n\n  useEffect(() => {\n    let newTime = 6300;\n    if (office.leftDoor) newTime -= 1100;\n    if (office.rightDoor) newTime -= 1100;\n    if (office.leftLight) newTime -= 500;\n    if (office.rightLight) newTime -= 500;\n    if (isCameraOpen) newTime -= 1100;\n\n    dispatch({ type: \"CHANGE_TIME\", content: newTime });\n    officeProps = {\n      leftDoor: office.leftDoor,\n      rightDoor: office.rightDoor,\n    };\n  }, [\n    office.leftDoor,\n    office.rightDoor,\n    office.leftLight,\n    office.rightLight,\n    isCameraOpen,\n  ]);\n\n  const handleJumpscare = (character) => {\n    if (isBlackout || gameOver) return;\n    dispatch({\n      type: \"CHANGE_ANIMATRONIC\",\n      animatronic: character,\n      animatronicState: {\n        door: null,\n        camera: null,\n        jumpscare: true,\n      },\n    });\n\n    dispatch({ type: \"CHANGE_JUMPSCARE\", animatronic: character });\n    if (character === \"Foxy\" || character === \"Freddy\")\n      dispatch({ type: \"FORCE_CAMERA_CLOSE\" });\n    setTimeout(() => {\n      if (!isCameraOpen) dispatch({ type: \"FORCE_CAMERA_CLOSE\" });\n    }, 10000);\n  };\n\n  async function isThisDoorOpen(door) {\n    const isDoorOpen = await officeProps[door];\n    return isDoorOpen;\n  }\n\n  return (\n    <>\n      <Animatronic\n        stages={stages}\n        handleJumpscare={handleJumpscare}\n        gameOver={gameOver}\n        isThisDoorOpen={isThisDoorOpen}\n        blackout={energy <= 0}\n      />\n\n      {!gameOver ? (\n        <>\n          {energy <= 0 ? null : <Hud />}\n          <Camera handleJumpscare={handleJumpscare} goldenFreddy={goldenFreddy} setGoldenFreddy={setGoldenFreddy}/>\n          {isCameraOpen ? null : (\n            <Office endGame={endGame} blackout={energy <= 0} goldenFreddyEnabled={goldenFreddy} />\n          )}\n        </>\n      ) : null}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    animatronics: state.animatronicsReducer,\n    time: state.configReducer.time,\n    hour: state.configReducer.hour,\n    energy: state.configReducer.energy,\n    office: state.officeReducer,\n    camera: state.cameraReducer.camera,\n    isCameraOpen: state.cameraReducer.isCameraOpen,\n  };\n};\n\nexport default connect(mapStateToProps)(Game);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}