{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\game\\\\src\\\\Controller.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport BlackoutSound from \"./media/Sounds/powerdown.mp3\";\nimport { connect } from \"react-redux\";\nimport Game from \"./Game\";\nimport StaticImage from \"./media/Textures/Static-Cam.webp\";\nimport StaticSound from \"./media/Sounds/Dead.mp3\";\nimport VictoryGIF from \"./media/Textures/Victory.gif\";\nimport VictorySound from \"./media/Sounds/Clock.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet gameOverAudio = new Audio(StaticSound);\nlet hourInterval = null;\n\nfunction Controller(_ref) {\n  _s();\n\n  let {\n    isPlaying,\n    hour,\n    time,\n    energy,\n    jumpscare,\n    setStart,\n    dispatch,\n    stages,\n    hourLength\n  } = _ref;\n  const [gameOver, setGameOver] = useState(false);\n  const [victory, setVictory] = useState(false);\n  useEffect(() => {\n    dispatch({\n      type: \"CLEAR_DATA\"\n    });\n    changeEnergy();\n    return () => {\n      // clearInterval(hourInterval);\n      dispatch({\n        type: \"CLEAR_DATA\"\n      });\n      gameOverAudio.pause();\n    };\n  }, []);\n  useEffect(() => {\n    setTimeout(() => {\n      if (hour === 5 && !gameOver) endGame(true);else changeHour(hour);\n    }, hourLength);\n  }, [hour]);\n  useEffect(() => {\n    if (energy <= 0) {\n      setBlackout();\n    } else changeEnergy(energy);\n  }, [energy]);\n\n  async function changeHour(h) {\n    if (isPlaying && !jumpscare && !gameOver && h < 6) {\n      dispatch({\n        type: \"CHANGE_HOUR\"\n      });\n    }\n  }\n\n  async function changeEnergy(e) {\n    if (isPlaying && !gameOver && e > 0) {\n      setTimeout(() => {\n        dispatch({\n          type: \"CHANGE_ENERGY\"\n        });\n      }, time);\n    }\n  }\n\n  const setBlackout = () => {\n    new Audio(BlackoutSound).play();\n    dispatch({\n      type: \"FORCE_CAMERA_CLOSE\"\n    });\n    dispatch({\n      type: \"CHANGE_CAMERA_BUTTON\"\n    });\n  };\n\n  const endGame = hasWon => {\n    if (hasWon) {\n      setVictory(true);\n      let VictoryMusic = new Audio(VictorySound);\n      VictoryMusic.play();\n      const victories = JSON.parse(localStorage.getItem(\"victories\")) || {};\n      if (stages.mode !== \"CUSTOM\") victories[stages.mode] = \"★\";\n      localStorage.setItem(\"victories\", JSON.stringify(victories));\n    } else {\n      setGameOver(true);\n      gameOverAudio.currentTime = 0;\n      gameOverAudio.play();\n    }\n\n    dispatch({\n      type: \"SET_GAME_OVER\"\n    });\n    setTimeout(() => {\n      setStart(false);\n    }, 10000);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [gameOver ? /*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"static\",\n      src: StaticImage,\n      style: {\n        width: \"100vw\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }, this) : null, victory ? /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"100vw\",\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"victory\",\n        src: VictoryGIF\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }, this) : null, /*#__PURE__*/_jsxDEV(Game, {\n      stages: stages,\n      gameOver: gameOver || victory,\n      endGame: endGame\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Controller, \"Ma5Epj7BGjqvKidmgmgDmv7VoF4=\");\n\n_c = Controller;\n\nconst mapStateToProps = state => {\n  return {\n    time: state.configReducer.time,\n    hour: state.configReducer.hour,\n    isPlaying: state.configReducer.isPlaying,\n    jumpscare: state.configReducer.jumpscare,\n    energy: state.configReducer.energy,\n    animatronics: state.animatronicsReducer\n  };\n};\n\nexport default connect(mapStateToProps)(Controller);\n\nvar _c;\n\n$RefreshReg$(_c, \"Controller\");","map":{"version":3,"names":["React","useState","useEffect","BlackoutSound","connect","Game","StaticImage","StaticSound","VictoryGIF","VictorySound","gameOverAudio","Audio","hourInterval","Controller","isPlaying","hour","time","energy","jumpscare","setStart","dispatch","stages","hourLength","gameOver","setGameOver","victory","setVictory","type","changeEnergy","pause","setTimeout","endGame","changeHour","setBlackout","h","e","play","hasWon","VictoryMusic","victories","JSON","parse","localStorage","getItem","mode","setItem","stringify","currentTime","width","height","display","justifyContent","alignItems","mapStateToProps","state","configReducer","animatronics","animatronicsReducer"],"sources":["C:/Users/PC/Desktop/game/src/Controller.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport BlackoutSound from \"./media/Sounds/powerdown.mp3\";\nimport { connect } from \"react-redux\";\nimport Game from \"./Game\";\n\nimport StaticImage from \"./media/Textures/Static-Cam.webp\";\nimport StaticSound from \"./media/Sounds/Dead.mp3\";\nimport VictoryGIF from \"./media/Textures/Victory.gif\";\nimport VictorySound from \"./media/Sounds/Clock.mp3\";\n\nlet gameOverAudio = new Audio(StaticSound);\nlet hourInterval = null;\n\nfunction Controller({\n    isPlaying,\n    hour,\n    time,\n    energy,\n    jumpscare,\n    setStart,\n    dispatch,\n    stages,\n    hourLength,\n}) {\n    const [gameOver, setGameOver] = useState(false);\n    const [victory, setVictory] = useState(false);\n\n\n    useEffect(() => {\n        dispatch({ type: \"CLEAR_DATA\" });\n        changeEnergy();\n\n        return () => {\n            // clearInterval(hourInterval);\n            dispatch({ type: \"CLEAR_DATA\" });\n            gameOverAudio.pause();\n        };\n    }, []);\n\n    useEffect(() => {\n        setTimeout(() => {\n            if (hour === 5 && !gameOver) endGame(true);\n            else changeHour(hour);\n        }, hourLength);\n    }, [hour])\n\n    useEffect(() => {\n        if (energy <= 0) {\n            setBlackout();\n        } else changeEnergy(energy);\n    }, [energy]);\n\n    async function changeHour(h) {\n        if (isPlaying && !jumpscare && !gameOver && h < 6) {\n            dispatch({ type: \"CHANGE_HOUR\" });\n        }\n    }\n\n    async function changeEnergy(e) {\n        if (isPlaying && !gameOver && e > 0) {\n            setTimeout(() => {\n                dispatch({ type: \"CHANGE_ENERGY\" });\n            }, time);\n        }\n    }\n\n    const setBlackout = () => {\n        new Audio(BlackoutSound).play();\n\n        dispatch({ type: \"FORCE_CAMERA_CLOSE\" });\n        dispatch({ type: \"CHANGE_CAMERA_BUTTON\" });\n    };\n\n    const endGame = (hasWon) => {\n        if (hasWon) {\n            setVictory(true);\n            let VictoryMusic = new Audio(VictorySound);\n            VictoryMusic.play();\n\n            const victories = JSON.parse(localStorage.getItem(\"victories\")) || {};\n            if(stages.mode !== \"CUSTOM\") victories[stages.mode] = \"★\"\n            \n            localStorage.setItem(\"victories\", JSON.stringify(victories));\n        } else {\n            setGameOver(true);\n            gameOverAudio.currentTime = 0;\n            gameOverAudio.play();\n        }\n        dispatch({ type: \"SET_GAME_OVER\" });\n        setTimeout(() => {\n            setStart(false);\n        }, 10000);\n    };\n\n    return (\n        <>\n            {gameOver ? (\n                <img\n                    alt=\"static\"\n                    src={StaticImage}\n                    style={{ width: \"100vw\" }}\n                />\n            ) : null}\n            {victory ? (\n                <div\n                    style={{\n                        width: \"100vw\",\n                        height: \"100vh\",\n                        display: \"flex\",\n                        justifyContent: \"center\",\n                        alignItems: \"center\",\n                    }}\n                >\n                    <img alt=\"victory\" src={VictoryGIF} />\n                </div>\n            ) : null}\n            <Game stages={stages} gameOver={gameOver || victory} endGame={endGame} />\n        </>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        time: state.configReducer.time,\n        hour: state.configReducer.hour,\n        isPlaying: state.configReducer.isPlaying,\n        jumpscare: state.configReducer.jumpscare,\n        energy: state.configReducer.energy,\n        animatronics: state.animatronicsReducer,\n    };\n};\n\nexport default connect(mapStateToProps)(Controller);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}