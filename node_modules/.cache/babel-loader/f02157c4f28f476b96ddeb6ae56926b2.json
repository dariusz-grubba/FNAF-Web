{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Functions from \"./Functions\";\nimport Media from \"./Media\";\nimport { connect } from \"react-redux\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet FreddyIterator = Functions.Freddy();\nlet BonnieIterator = Functions.Bonnie();\nlet ChicaIterator = Functions.Chica();\nlet FoxyIterator = Functions.Foxy();\nFreddyIterator.next();\nlet FreddyTime = 10000;\nlet BonnieTime = 5000;\nlet ChicaTime = 7300;\nlet FoxyTime = 13000;\nconst ranges = {\n  Freddy: 1,\n  Bonnie: 1,\n  Chica: 2,\n  Foxy: 1\n};\nlet isBlackout = false;\nlet isGameOver = false;\n\nfunction Animatronic(_ref) {\n  _s();\n\n  let {\n    animatronics,\n    config,\n    handleJumpscare,\n    isThisDoorOpen,\n    dispatch,\n    stages\n  } = _ref;\n  const {\n    hour,\n    gameOver,\n    blackout\n  } = config;\n  useEffect(() => {\n    ranges[\"Freddy\"] = stages.Freddy;\n    ranges[\"Bonnie\"] = stages.Bonnie;\n    ranges[\"Chica\"] = stages.Chica;\n    ranges[\"Foxy\"] = stages.Foxy;\n    if (stages.Bonnie) willMove(\"Bonnie\", BonnieIterator, BonnieTime);\n    if (stages.Chica) willMove(\"Chica\", ChicaIterator, ChicaTime);\n    if (stages.Foxy) willMove(\"Foxy\", FoxyIterator, FoxyTime, true);\n    if (stages.Freddy && stages.Chica && stages.Bonnie) willMove(\"Freddy\", FreddyIterator, FreddyTime, true);\n    return () => {\n      FreddyIterator = Functions.Freddy();\n      BonnieIterator = Functions.Bonnie();\n      ChicaIterator = Functions.Chica();\n      FoxyIterator = Functions.Foxy();\n      FreddyIterator.next();\n      FreddyTime = 10000;\n      BonnieTime = 5000;\n      ChicaTime = 7300;\n      FoxyTime = 13000;\n      ranges[\"Freddy\"] = stages.Freddy;\n      ranges[\"Bonnie\"] = stages.Bonnie;\n      ranges[\"Chica\"] = stages.Chica;\n      ranges[\"Foxy\"] = stages.Foxy;\n      isBlackout = false;\n      isGameOver = false;\n    };\n  }, []);\n  useEffect(() => {\n    if (hour === 2) {\n      FreddyTime = 9500;\n      BonnieTime = 4700;\n      ChicaTime = 6800;\n      FoxyTime = 10000;\n      ranges[\"Bonnie\"] = ranges[\"Bonnie\"] + 1;\n      ranges[\"Chica\"] = ranges[\"Chica\"] + 1;\n    } else if (hour === 4) {\n      ranges[\"Bonnie\"] = ranges[\"Bonnie\"] + 2;\n      ranges[\"Chica\"] = ranges[\"Chica\"] + 2;\n      ranges[\"Freddy\"] = ranges[\"Freddy\"] + 1;\n      ranges[\"Foxy\"] = ranges[\"Foxy\"] + 1;\n    } else if (hour === 5) {\n      ranges[\"Bonnie\"] = ranges[\"Bonnie\"] + 2;\n      ranges[\"Chica\"] = ranges[\"Chica\"] + 2;\n      ranges[\"Freddy\"] = ranges[\"Freddy\"] + 2;\n      ranges[\"Foxy\"] = ranges[\"Foxy\"] + 2;\n    }\n  }, [hour]);\n  useEffect(() => {\n    if (gameOver) isGameOver = gameOver;\n  }, [gameOver]);\n\n  const changeAnimatronic = func => {\n    dispatch({\n      type: \"CHANGE_ANIMATRONICS_MOVING\",\n      content: true\n    });\n    func();\n    setTimeout(() => {\n      dispatch({\n        type: \"CHANGE_ANIMATRONICS_MOVING\",\n        content: false\n      });\n    }, 1500);\n  };\n\n  const animatronicFailed = character => {\n    changeAnimatronic(() => {\n      dispatch({\n        type: \"CHANGE_ANIMATRONIC\",\n        animatronic: character,\n        animatronicState: {\n          door: false,\n          camera: character === \"Freddy\" ? \"Stage\" : character === \"Foxy\" ? \"\" : \"Dinning Area\",\n          jumpscare: false\n        }\n      });\n\n      if (character === \"Bonnie\") {\n        BonnieIterator = Functions.Bonnie();\n        willMove(\"Bonnie\", BonnieIterator, BonnieTime);\n      } else if (character === \"Chica\") {\n        ChicaIterator = Functions.Chica();\n        willMove(\"Chica\", ChicaIterator, ChicaTime);\n      } else if (character === \"Foxy\") {\n        FoxyIterator = Functions.Foxy();\n        Media.Sounds.FoxyPunch.play();\n        willMove(\"Foxy\", FoxyIterator, FoxyTime, true);\n      } else if (character === \"Freddy\") {\n        FreddyIterator = Functions.Freddy();\n        FreddyIterator.next();\n        willMove(\"Freddy\", FreddyIterator, FreddyTime, true);\n      }\n    });\n  };\n\n  const freddyLaugh = () => {\n    if (isBlackout) return;\n    let FreddyNumber = Math.floor(Math.random() * 2);\n\n    if (FreddyNumber === 0) {\n      Media.Sounds.FreddyLaugh1.play();\n    } else {\n      Media.Sounds.FreddyLaugh2.play();\n    }\n  };\n\n  useEffect(() => {\n    if (blackout) isBlackout = true;\n  }, [blackout]);\n\n  function willMove(character, iterator, animaTime) {\n    const thisInterval = setInterval(() => {\n      const max = character === \"Bonnie\" || character === \"Chica\" ? 22 : 30;\n      let luckyNumber = Math.floor(Math.random() * max);\n      let condition = luckyNumber < ranges[character] && !animatronics[character].door;\n      let newPlace;\n\n      if (condition) {\n        changeAnimatronic(() => {\n          newPlace = iterator.next().value;\n          const newState = {\n            door: newPlace === \"Door\" || newPlace === \"_3\",\n            jumpscare: false,\n            camera: newPlace\n          };\n          dispatch({\n            type: \"CHANGE_ANIMATRONIC\",\n            animatronic: character,\n            animatronicState: newState\n          });\n        });\n        if (character === \"Freddy\") freddyLaugh();\n      }\n\n      if (isBlackout || isGameOver) clearInterval(thisInterval);\n\n      if (newPlace === \"Door\" || newPlace === \"_3\") {\n        if (!isBlackout) checkDoors(character);\n        clearInterval(thisInterval);\n      }\n    }, animaTime);\n  }\n\n  ;\n\n  async function checkDoors(character) {\n    const door = character === \"Bonnie\" || character === \"Foxy\" ? \"leftDoor\" : \"rightDoor\";\n    setTimeout(async () => {\n      const isDoorOpen = await isThisDoorOpen(door);\n\n      if (!isDoorOpen) {\n        setTimeout(async () => {\n          const isDoorOpen = await isThisDoorOpen(door);\n\n          if (!isDoorOpen) {\n            setTimeout(async () => {\n              const isDoorOpen = await isThisDoorOpen(door);\n\n              if (!isDoorOpen) {\n                handleJumpscare(character);\n              } else animatronicFailed(character);\n            }, 3000);\n          } else animatronicFailed(character);\n        }, 5000);\n      } else animatronicFailed(character);\n    }, 10000);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(Animatronic, \"0cIHaRPT5AsNp+tu70IQfhS7pBY=\");\n\n_c = Animatronic;\n\nconst mapStateToProps = state => {\n  return {\n    leftDoor: state.officeReducer.leftDoor,\n    rightDoor: state.officeReducer.rightDoor,\n    animatronics: state.animatronicsReducer,\n    config: state.configReducer\n  };\n};\n\nexport default connect(mapStateToProps)(Animatronic);\n\nvar _c;\n\n$RefreshReg$(_c, \"Animatronic\");","map":{"version":3,"names":["React","useState","useEffect","Functions","Media","connect","FreddyIterator","Freddy","BonnieIterator","Bonnie","ChicaIterator","Chica","FoxyIterator","Foxy","next","FreddyTime","BonnieTime","ChicaTime","FoxyTime","ranges","isBlackout","isGameOver","Animatronic","animatronics","config","handleJumpscare","isThisDoorOpen","dispatch","stages","hour","gameOver","blackout","willMove","changeAnimatronic","func","type","content","setTimeout","animatronicFailed","character","animatronic","animatronicState","door","camera","jumpscare","Sounds","FoxyPunch","play","freddyLaugh","FreddyNumber","Math","floor","random","FreddyLaugh1","FreddyLaugh2","iterator","animaTime","thisInterval","setInterval","max","luckyNumber","condition","newPlace","value","newState","clearInterval","checkDoors","isDoorOpen","mapStateToProps","state","leftDoor","officeReducer","rightDoor","animatronicsReducer","configReducer"],"sources":["C:/Users/PC/Desktop/game/src/components/Animatronic.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Functions from \"./Functions\";\nimport Media from \"./Media\";\nimport { connect } from \"react-redux\";\n\nlet FreddyIterator = Functions.Freddy();\nlet BonnieIterator = Functions.Bonnie();\nlet ChicaIterator = Functions.Chica();\nlet FoxyIterator = Functions.Foxy();\n\nFreddyIterator.next();\n\nlet FreddyTime = 10000;\nlet BonnieTime = 5000;\nlet ChicaTime = 7300;\nlet FoxyTime = 13000;\n\nconst ranges = {\n  Freddy: 1,\n  Bonnie: 1,\n  Chica: 2,\n  Foxy: 1,\n}\n\nlet isBlackout = false;\nlet isGameOver = false;\n\nfunction Animatronic({\n  animatronics,\n  config,\n  handleJumpscare,\n  isThisDoorOpen,\n  dispatch,\n  stages\n}) {\n  const { hour, gameOver, blackout } = config;\n\n  useEffect(() => {\n    ranges[\"Freddy\"] = stages.Freddy;\n    ranges[\"Bonnie\"] = stages.Bonnie;\n    ranges[\"Chica\"] = stages.Chica;\n    ranges[\"Foxy\"] = stages.Foxy;\n\n    if(stages.Bonnie) willMove(\"Bonnie\", BonnieIterator, BonnieTime);\n    if(stages.Chica) willMove(\"Chica\", ChicaIterator, ChicaTime);\n    if(stages.Foxy) willMove(\"Foxy\", FoxyIterator, FoxyTime, true);\n    if(stages.Freddy && stages.Chica && stages.Bonnie)willMove(\"Freddy\", FreddyIterator, FreddyTime, true);\n\n    return () => {\n      FreddyIterator = Functions.Freddy();\n      BonnieIterator = Functions.Bonnie();\n      ChicaIterator = Functions.Chica();\n      FoxyIterator = Functions.Foxy();\n\n      FreddyIterator.next();\n\n      FreddyTime = 10000;\n      BonnieTime = 5000;\n      ChicaTime = 7300;\n      FoxyTime = 13000;\n      ranges[\"Freddy\"] = stages.Freddy;\n      ranges[\"Bonnie\"] = stages.Bonnie;\n      ranges[\"Chica\"] = stages.Chica;\n      ranges[\"Foxy\"] = stages.Foxy;\n\n      isBlackout = false;\n      isGameOver = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    if (hour === 2) {\n      FreddyTime = 9500;\n      BonnieTime = 4700;\n      ChicaTime = 6800;\n      FoxyTime = 10000;\n\n      \n      ranges[\"Bonnie\"] = ranges[\"Bonnie\"] + 1;\n      ranges[\"Chica\"] = ranges[\"Chica\"] + 1;\n    } else if (hour === 4) {\n      ranges[\"Bonnie\"] = ranges[\"Bonnie\"] + 2;\n      ranges[\"Chica\"] = ranges[\"Chica\"] + 2;\n      ranges[\"Freddy\"] = ranges[\"Freddy\"] + 1;\n      ranges[\"Foxy\"] = ranges[\"Foxy\"] + 1;\n    } else if (hour === 5) {\n      ranges[\"Bonnie\"] = ranges[\"Bonnie\"] + 2;\n      ranges[\"Chica\"] = ranges[\"Chica\"] + 2;\n      ranges[\"Freddy\"] = ranges[\"Freddy\"] + 2;\n      ranges[\"Foxy\"] = ranges[\"Foxy\"] + 2;\n    }\n  }, [hour]);\n\n  useEffect(() => {\n    if (gameOver) isGameOver = gameOver;\n  }, [gameOver]);\n\n  const changeAnimatronic = (func) => {\n    dispatch({ type: \"CHANGE_ANIMATRONICS_MOVING\", content: true });\n\n    func();\n\n    setTimeout(() => {\n      dispatch({\n        type: \"CHANGE_ANIMATRONICS_MOVING\",\n        content: false,\n      });\n    }, 1500);\n  };\n\n  const animatronicFailed = (character) => {\n    changeAnimatronic(() => {\n      dispatch({\n        type: \"CHANGE_ANIMATRONIC\",\n        animatronic: character,\n        animatronicState: {\n          door: false,\n          camera:\n            character === \"Freddy\"\n              ? \"Stage\"\n              : character === \"Foxy\"\n              ? \"\"\n              : \"Dinning Area\",\n          jumpscare: false,\n        },\n      });\n\n      if (character === \"Bonnie\") {\n        BonnieIterator = Functions.Bonnie();\n        willMove(\"Bonnie\", BonnieIterator, BonnieTime);\n      } else if (character === \"Chica\") {\n        ChicaIterator = Functions.Chica();\n        willMove(\"Chica\", ChicaIterator, ChicaTime);\n      } else if (character === \"Foxy\") {\n        FoxyIterator = Functions.Foxy();\n        Media.Sounds.FoxyPunch.play();\n        willMove(\"Foxy\", FoxyIterator, FoxyTime, true);\n      } else if (character === \"Freddy\") {\n        FreddyIterator = Functions.Freddy();\n        FreddyIterator.next();\n        willMove(\"Freddy\", FreddyIterator, FreddyTime, true);\n      }\n    });\n  };\n\n  const freddyLaugh = () => {\n    if (isBlackout) return;\n    let FreddyNumber = Math.floor(Math.random() * 2);\n    if (FreddyNumber === 0) {\n      Media.Sounds.FreddyLaugh1.play();\n    } else {\n      Media.Sounds.FreddyLaugh2.play();\n    }\n  };\n  useEffect(() => {\n    if (blackout) isBlackout = true;\n  }, [blackout]);\n\n  function willMove (character, iterator, animaTime) {\n    const thisInterval = setInterval(() => {\n      const max = character === \"Bonnie\" || character === \"Chica\" ? 22 : 30;\n      let luckyNumber = Math.floor(Math.random() * max);\n\n      let condition = luckyNumber < ranges[character] && !animatronics[character].door;\n\n      let newPlace;\n      if (condition) {\n        changeAnimatronic(() => {\n          newPlace = iterator.next().value;\n\n          const newState = {\n            door: newPlace === \"Door\" || newPlace === \"_3\",\n            jumpscare: false,\n            camera: newPlace,\n          };\n          dispatch({\n            type: \"CHANGE_ANIMATRONIC\",\n            animatronic: character,\n            animatronicState: newState,\n          });\n        });\n\n        if (character === \"Freddy\") freddyLaugh();\n      }\n\n      if (isBlackout || isGameOver) clearInterval(thisInterval);\n\n      if (newPlace === \"Door\" || newPlace === \"_3\") {\n        if (!isBlackout) checkDoors(character);\n        clearInterval(thisInterval);\n      }\n    }, animaTime);\n  };\n\n  async function checkDoors(character) {\n    const door =\n      character === \"Bonnie\" || character === \"Foxy\" ? \"leftDoor\" : \"rightDoor\";\n\n    setTimeout(async () => {\n      const isDoorOpen = await isThisDoorOpen(door);\n      if (!isDoorOpen) {\n        setTimeout(async () => {\n          const isDoorOpen = await isThisDoorOpen(door);\n          if (!isDoorOpen) {\n            setTimeout(async () => {\n              const isDoorOpen = await isThisDoorOpen(door);\n              if (!isDoorOpen) {\n                handleJumpscare(character);\n              } else animatronicFailed(character);\n            }, 3000);\n          } else animatronicFailed(character);\n        }, 5000);\n      } else animatronicFailed(character);\n    }, 10000);\n  }\n\n  return <></>;\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    leftDoor: state.officeReducer.leftDoor,\n    rightDoor: state.officeReducer.rightDoor,\n    animatronics: state.animatronicsReducer,\n    config: state.configReducer,\n  };\n};\n\nexport default connect(mapStateToProps)(Animatronic);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}