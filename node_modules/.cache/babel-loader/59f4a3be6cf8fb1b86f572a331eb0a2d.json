{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\game\\\\src\\\\components\\\\Camera.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCam } from \"./Images\";\nimport AnimatronicsMoving from \"../media/Sounds/garble1.mp3\";\nimport AnimatronicsMoving2 from \"../media/Sounds/garble2.mp3\";\nimport Static from \"../media/Textures/Static-Cam.webp\";\nimport Black from \"../media/Textures/black.jpg\";\nimport Media from \"./Media\";\nimport CameraMap from \"../components/CameraMap\";\nimport CameraButton from \"../components/CameraButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Camera(_ref) {\n  _s();\n\n  let {\n    animatronics,\n    areAnimatronicsMoving,\n    isCameraOpen,\n    office,\n    camera,\n    cameraButtonDisappear,\n    dispatch,\n    goldenFreddy,\n    setGoldenFreddy\n  } = _ref;\n  const [Image, setImage] = useState(Media.Images.Stage);\n  const closeCameraRef = useRef(null);\n  const cameraDivRef = useRef(null);\n\n  const handleCameraButton = () => {\n    dispatch({\n      type: \"SET_IS_OPEN\"\n    });\n  };\n\n  const handleCameraChange = e => {\n    e.preventDefault();\n    Media.Sounds.CameraChange.play();\n    dispatch({\n      type: \"CHANGE_CAMERA\",\n      content: e.target.title\n    });\n  };\n\n  useEffect(() => {\n    if (cameraDivRef.current) {\n      if (isCameraOpen) setTimeout(() => {\n        cameraDivRef.current.style.display = \"flex\";\n      }, 350);else setTimeout(() => {\n        cameraDivRef.current.style.display = \"none\";\n      }, 100);\n    }\n  }, [isCameraOpen]);\n  useEffect(() => {\n    const {\n      Bonnie,\n      Chica,\n      Freddy,\n      Foxy\n    } = animatronics;\n    let result = \"\";\n    if (Bonnie.camera === camera) result += \"_b\";\n    if (Chica.camera === camera) result += \"_c\";\n    if (Freddy.camera === camera) result += \"_f\";\n    const newCamera = getCam(result, camera, Foxy.camera, goldenFreddy, setGoldenFreddy);\n    setImage(newCamera);\n  }, [camera, animatronics, areAnimatronicsMoving, animatronics.Foxy.camera]);\n  useEffect(() => {\n    if (areAnimatronicsMoving && isCameraOpen) {\n      let MusicNumber = Math.floor(Math.random() * 2);\n      let Sound;\n\n      if (MusicNumber === 1 || MusicNumber === 2) {\n        Sound = new Audio(AnimatronicsMoving);\n      } else {\n        Sound = new Audio(AnimatronicsMoving2);\n      }\n\n      Sound.play();\n    }\n  }, [areAnimatronicsMoving]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [cameraButtonDisappear ? null : /*#__PURE__*/_jsxDEV(CameraButton, {\n      handleCameraButton: handleCameraButton,\n      style: {\n        zIndex: \"1\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }, this), isCameraOpen ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        draggable: \"false\",\n        className: \"camera opening animation\",\n        \"data-left-door\": office.leftDoor,\n        \"data-right-door\": office.rightDoor,\n        id: \"camera\",\n        src: Media.Images.Up,\n        alt: \"Opening camera\",\n        style: {\n          margin: 0,\n          width: \"100vw\",\n          height: \"100vh\",\n          position: \"absolute\",\n          top: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"camera-container\",\n        style: {\n          display: \"none\"\n        },\n        ref: cameraDivRef,\n        children: [/*#__PURE__*/_jsxDEV(CameraMap, {\n          handleCameraChange: handleCameraChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this), areAnimatronicsMoving ? /*#__PURE__*/_jsxDEV(\"img\", {\n          draggable: \"false\",\n          src: Black,\n          alt: \"Animatronics are moving\",\n          className: \"animatronics-true\",\n          style: {\n            height: \"100vh\",\n            width: \"100vw\",\n            backgroundColor: \"black\",\n            position: \"absolute\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Image,\n          alt: \"Camera\",\n          className: \"camera-img\",\n          style: {\n            width: \"100vw\",\n            position: \"absolute\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"Static\",\n          src: Static,\n          style: {\n            opacity: \"0.1\",\n            width: \"100vw\",\n            height: \"100vh\"\n          },\n          draggable: \"false\",\n          className: \"static-open\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"img\", {\n      draggable: \"false\",\n      className: `camera opening`,\n      id: \"camera\",\n      ref: closeCameraRef,\n      src: Media.Images.Down,\n      alt: \"Closing camera\",\n      style: {\n        width: \"100vw\",\n        height: \"100vh\",\n        position: \"absolute\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Camera, \"tpkAVKV6RVQBf0CwGtTbH5SFTN8=\");\n\n_c = Camera;\n\nconst mapStateToProps = state => {\n  return {\n    animatronics: state.animatronicsReducer,\n    camera: state.cameraReducer.camera,\n    office: state.officeReducer,\n    isCameraOpen: state.cameraReducer.isCameraOpen,\n    areAnimatronicsMoving: state.cameraReducer.areAnimatronicsMoving,\n    jumpscare: state.configReducer.jumpscare,\n    cameraButtonDisappear: state.configReducer.cameraButtonDisappear\n  };\n};\n\nexport default connect(mapStateToProps)(Camera);\n\nvar _c;\n\n$RefreshReg$(_c, \"Camera\");","map":{"version":3,"names":["React","useState","useEffect","useRef","connect","getCam","AnimatronicsMoving","AnimatronicsMoving2","Static","Black","Media","CameraMap","CameraButton","Camera","animatronics","areAnimatronicsMoving","isCameraOpen","office","camera","cameraButtonDisappear","dispatch","goldenFreddy","setGoldenFreddy","Image","setImage","Images","Stage","closeCameraRef","cameraDivRef","handleCameraButton","type","handleCameraChange","e","preventDefault","Sounds","CameraChange","play","content","target","title","current","setTimeout","style","display","Bonnie","Chica","Freddy","Foxy","result","newCamera","MusicNumber","Math","floor","random","Sound","Audio","zIndex","leftDoor","rightDoor","Up","margin","width","height","position","top","backgroundColor","opacity","Down","mapStateToProps","state","animatronicsReducer","cameraReducer","officeReducer","jumpscare","configReducer"],"sources":["C:/Users/PC/Desktop/game/src/components/Camera.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getCam } from \"./Images\";\n\nimport AnimatronicsMoving from \"../media/Sounds/garble1.mp3\";\nimport AnimatronicsMoving2 from \"../media/Sounds/garble2.mp3\";\nimport Static from \"../media/Textures/Static-Cam.webp\";\nimport Black from \"../media/Textures/black.jpg\";\nimport Media from \"./Media\";\n\nimport CameraMap from \"../components/CameraMap\";\nimport CameraButton from \"../components/CameraButton\";\n\nfunction Camera({\n    animatronics,\n    areAnimatronicsMoving,\n    isCameraOpen,\n    office,\n    camera,\n    cameraButtonDisappear,\n    dispatch,\n    goldenFreddy,\n    setGoldenFreddy,\n}) {\n    const [Image, setImage] = useState(Media.Images.Stage);\n\n    const closeCameraRef = useRef(null);\n    const cameraDivRef = useRef(null);\n\n    const handleCameraButton = () => {\n        dispatch({ type: \"SET_IS_OPEN\" });\n    };\n\n    const handleCameraChange = (e) => {\n        e.preventDefault();\n        Media.Sounds.CameraChange.play();\n        dispatch({ type: \"CHANGE_CAMERA\", content: e.target.title });\n    };\n\n    useEffect(() => {\n        if (cameraDivRef.current) {\n            if (isCameraOpen)\n                setTimeout(() => {\n                    cameraDivRef.current.style.display = \"flex\";\n                }, 350);\n            else\n                setTimeout(() => {\n                    cameraDivRef.current.style.display = \"none\";\n                }, 100);\n        }\n    }, [isCameraOpen]);\n\n    useEffect(() => {\n        const { Bonnie, Chica, Freddy, Foxy } = animatronics;\n        let result = \"\";\n        if (Bonnie.camera === camera) result += \"_b\";\n        if (Chica.camera === camera) result += \"_c\";\n        if (Freddy.camera === camera) result += \"_f\";\n\n        const newCamera = getCam(result, camera, Foxy.camera, goldenFreddy, setGoldenFreddy);\n        setImage(newCamera);\n    }, [camera, animatronics, areAnimatronicsMoving, animatronics.Foxy.camera]);\n\n    useEffect(() => {\n        if (areAnimatronicsMoving && isCameraOpen) {\n            let MusicNumber = Math.floor(Math.random() * 2);\n            let Sound;\n            if (MusicNumber === 1 || MusicNumber === 2) {\n                Sound = new Audio(AnimatronicsMoving);\n            } else {\n                Sound = new Audio(AnimatronicsMoving2);\n            }\n            Sound.play();\n        }\n    }, [areAnimatronicsMoving]);\n\n    return (\n        <div>\n            {cameraButtonDisappear ? null : (\n                <CameraButton\n                    handleCameraButton={handleCameraButton}\n                    style={{ zIndex: \"1\" }}\n                />\n            )}\n            {isCameraOpen ? (\n                <>\n                    <img\n                        draggable=\"false\"\n                        className=\"camera opening animation\"\n                        data-left-door={office.leftDoor}\n                        data-right-door={office.rightDoor}\n                        id=\"camera\"\n                        src={Media.Images.Up}\n                        alt=\"Opening camera\"\n                        style={{\n                            margin: 0,\n                            width: \"100vw\",\n                            height: \"100vh\",\n                            position: \"absolute\",\n                            top: 0,\n                        }}\n                    />\n                    <div\n                        className=\"camera-container\"\n                        style={{ display: \"none\" }}\n                        ref={cameraDivRef}\n                    >\n                        <CameraMap handleCameraChange={handleCameraChange} />\n                        {areAnimatronicsMoving ? (\n                            <img\n                                draggable=\"false\"\n                                src={Black}\n                                alt=\"Animatronics are moving\"\n                                className=\"animatronics-true\"\n                                style={{\n                                    height: \"100vh\",\n                                    width: \"100vw\",\n                                    backgroundColor: \"black\",\n                                    position: \"absolute\",\n                                }}\n                            />\n                        ) : (\n                            <img\n                                src={Image}\n                                alt=\"Camera\"\n                                className=\"camera-img\"\n                                style={{\n                                    width: \"100vw\",\n                                    position: \"absolute\",\n                                }}\n                            />\n                        )}\n                        <img\n                            alt=\"Static\"\n                            src={Static}\n                            style={{\n                                opacity: \"0.1\",\n                                width: \"100vw\",\n                                height: \"100vh\",\n                            }}\n                            draggable=\"false\"\n                            className=\"static-open\"\n                        />\n                    </div>\n                </>\n            ) : (\n                <img\n                    draggable=\"false\"\n                    className={`camera opening`}\n                    id=\"camera\"\n                    ref={closeCameraRef}\n                    src={Media.Images.Down}\n                    alt=\"Closing camera\"\n                    style={{\n                        width: \"100vw\",\n                        height: \"100vh\",\n                        position: \"absolute\",\n                    }}\n                />\n            )}\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        animatronics: state.animatronicsReducer,\n        camera: state.cameraReducer.camera,\n        office: state.officeReducer,\n        isCameraOpen: state.cameraReducer.isCameraOpen,\n        areAnimatronicsMoving: state.cameraReducer.areAnimatronicsMoving,\n        jumpscare: state.configReducer.jumpscare,\n        cameraButtonDisappear: state.configReducer.cameraButtonDisappear,\n    };\n};\n\nexport default connect(mapStateToProps)(Camera);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}